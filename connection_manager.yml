- name: Manage PostgreSQL instances with the API
  hosts: localhost
  gather_facts: no
  vars:
    datasentinel_url: "platform_server"
    datasentinel_user: "datasentinel"
    datasentinel_password: "password"
    pg_name: "crm-production"
    pg_host: "pg-crm-2031"
    pg_port: 9342
    pg_user: "datasentinel"
    pg_password: "myPassword"
    pg_tags: "datacenter=paris,provider=aws,environment=production"
  tasks:
    - include_role:
        name: create_user_token

    - block:
        - name: Add a new PostgreSQL connection to Datasentinel
          uri:
            url: "https://{{ datasentinel_url }}/ds-api/pool/pg-instances/{{ pg_name }}"
            method: POST
            return_content: yes
            body_format: json
            body:  '{"host":"{{ pg_host }}", "port": {{ pg_port }}, "user":"{{ pg_user }}", "password":"{{ pg_password }}", "tags": "{{ pg_tags }}" }'
            validate_certs: False
            status_code: 201
            headers:
                user-token: "{{ user_token }}"
          register: response

        - name: Display connection creation
          debug:
            var: response.json

        - name: "Get status connection {{ pg_name }}"
          uri:
            url: "https://{{ datasentinel_url }}/ds-api/pool/pg-instances/{{ pg_name }}"
            method: GET
            return_content: yes
            validate_certs: False
            status_code: 200
            headers:
                user-token: "{{ user_token }}"
          register: response

        - name: display connection properties
          debug:
            var: response.json

        - name: "Update connection {{ pg_name }}"
          uri:
            url: "https://{{ datasentinel_url }}/ds-api/pool/pg-instances/{{ pg_name }}"
            method: PUT
            body_format: json
            body:  '{"host":"{{ pg_host }}", "port": {{ pg_port }}, "user":"{{ pg_user }}", "password":"{{ pg_password }}",
            "tags": "datacenter=paris,provider=azure,environment=production" }'
            return_content: yes
            validate_certs: False
            status_code: 200
            headers:
                user-token: "{{ user_token }}"
          register: response

        - name: Update connection status
          debug:
            var: response.json

        - name: "Disable connection {{ pg_name }}"
          uri:
            url: "https://{{ datasentinel_url }}/ds-api/pool/pg-instances/{{ pg_name }}/disable"
            method: PATCH
            return_content: yes
            validate_certs: False
            status_code: 200
            headers:
                user-token: "{{ user_token }}"
          register: response

        - name: Disable connection status
          debug:
            var: response.json

        - name: "Enable connection {{ pg_name }}"
          uri:
            url: "https://{{ datasentinel_url }}/ds-api/pool/pg-instances/{{ pg_name }}/enable"
            method: PATCH
            return_content: yes
            validate_certs: False
            status_code: 200
            headers:
                user-token: "{{ user_token }}"
          register: response

        - name: Enable connection status
          debug:
            var: response.json

        - name: "Delete connection {{ pg_name }}"
          uri:
            url: "https://{{ datasentinel_url }}/ds-api/pool/pg-instances/{{ pg_name }}"
            method: DELETE
            return_content: yes
            validate_certs: False
            status_code: 200
            headers:
                user-token: "{{ user_token }}"
          register: response

        - name: Delete connection status
          debug:
            var: response.json

      rescue:
        - name: Error managing the connection
          debug:
            var: response.json

